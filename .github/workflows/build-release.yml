name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: windows
            os: windows-latest
            rust_target: x86_64-pc-windows-msvc
          - platform: macos-intel
            os: macos-latest
            rust_target: x86_64-apple-darwin
          - platform: macos-arm
            os: macos-latest
            rust_target: aarch64-apple-darwin
          - platform: linux
            os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend-new/package-lock.json

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust_target }}

      - name: Install Linux dependencies
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        working-directory: frontend-new
        run: npm ci

      - name: Build frontend
        working-directory: frontend-new
        run: npm run build

      - name: Build Tauri app
        working-directory: frontend-new
        run: npm run tauri build -- --target ${{ matrix.rust_target }}

      - name: Upload Windows artifacts
        if: matrix.platform == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: terraforge-studio-windows
          path: |
            frontend-new/src-tauri/target/${{ matrix.rust_target }}/release/bundle/msi/*.msi
            frontend-new/src-tauri/target/${{ matrix.rust_target }}/release/bundle/nsis/*.exe

      - name: Upload macOS artifacts
        if: startsWith(matrix.platform, 'macos')
        uses: actions/upload-artifact@v4
        with:
          name: terraforge-studio-${{ matrix.platform }}
          path: |
            frontend-new/src-tauri/target/${{ matrix.rust_target }}/release/bundle/dmg/*.dmg
            frontend-new/src-tauri/target/${{ matrix.rust_target }}/release/bundle/macos/*.app

      - name: Upload Linux artifacts
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: terraforge-studio-linux
          path: |
            frontend-new/src-tauri/target/${{ matrix.rust_target }}/release/bundle/deb/*.deb
            frontend-new/src-tauri/target/${{ matrix.rust_target }}/release/bundle/appimage/*.AppImage

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/**/*.msi
            artifacts/**/*.exe
            artifacts/**/*.dmg
            artifacts/**/*.deb
            artifacts/**/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
